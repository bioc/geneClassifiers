%\VignetteIndexEntry{geneClassifiers introduction}
\documentclass{article}

\usepackage[letterpaper, portrait, margin=0.8in]{geometry}
\usepackage{listings}
\usepackage[colorlinks=true, urlcolor=blue, linkcolor=blue, citecolor=blue]{hyperref}
\usepackage{color}

\definecolor{dkgreen}{rgb}{0,0.6,0}
\definecolor{gray}{rgb}{0.5,0.5,0.5}
\definecolor{mauve}{rgb}{0.58,0,0.82}
\usepackage{verbatim}
\usepackage{graphicx}
\usepackage{caption}
\usepackage{amsmath}


\lstset{frame=tb,
    language=R,
    aboveskip=3mm,
    belowskip=3mm,
    showstringspaces=false,
    columns=flexible,
    basicstyle={\small\ttfamily},
    numbers=none,
    numberstyle=\tiny\color{gray},
    keywordstyle=\color{blue},
    commentstyle=\color{dkgreen},
    stringstyle=\color{mauve},
    breaklines=true,
    breakatwhitespace=true,
    tabsize=3
}

\usepackage{hyperref}
\begin{document} 
\title{Package: geneClassifiers (Version 1.0.0)}
\author{R.Kuiper}
\date{October 27, 2016}

\maketitle

<<echo=FALSE>>=
library(geneClassifiers)
@

This package aims for easy accessible use in research settings of gene 
expression based classification by running classifiers which have been 
published in literature. This is done through a workflow as illustrated 
in Figure \ref{Fig:workflow}. The raw gene expression data as obtained by 
microarray experiments is normalized using existing techniques (independent 
of this package). The choice of normalization method should be driven by 
the classifier to use. If the classifier to use was developped using MAS5.0 
normalized training data - as is often the case due to its ability to handle 
single microarrays - the new data to be classified should be normalized in a 
similar way. The classifier is then applied to the data while performing the 
required preprocessing steps such as mean centering, variance scaling, 
truncations, etc.  Afterwards, the resulting scores/classifications can be 
extracted. 


\begin{figure}[h]
\centering
\includegraphics[trim=0cm 0cm 0cm 0cm, clip=true, scale=0.5]{Figures/WorkFlow1.pdf}
\caption{The workflow as is considered in the geneClassifiers package. The 
raw gene expression data is normalized. This normalized data is used for 
input in the geneClassifiers package as is indicated by the lower three 
processes together with their relevant function(s).
\label{Fig:workflow}}
\end{figure}


\section{Classifiers}
\label{sec:Classifiers}
The currently implemented list of classifiers can be obtained with the command:
<<>>=
showClassifierList()
@
To find more information on a specific classifier (e.g. EMC92), an object 
containing the classifier parameters can be obtained by
<<>>=
EMC92Classifier<-getClassifier("EMC92")
EMC92Classifier

HM19Classifier<-getClassifier("HM19")
HM19Classifier
@

This is an object of class 'ClassifierParameters' which stores classifier 
related information, such as probe-sets used and their weightings, means, 
standard deviations and covariance structure as observed in the classifiers' 
training data, and the description of the procedure on how to preprocess 
new data prior to application of the classifier.

Futher information can be obtained from this object through several getter 
function such as obtaining the weights used by the classifier:

<<>>=
getWeights(EMC92Classifier)[1:10]
@
or the decision boundaries used to decide which class a sample score belongs 
to
<<>>=
getDecisionBoundaries(HM19Classifier)
@
or the 'eventChain' which is used to preprocess the data prior to performing 
the classification:
<<>>=
getEventChain(EMC92Classifier)
@
\section{Data to be classified}
\label{sec:data}
Currently, the input data for the 'geneClassifiers' package must be in the 
form of a Bioconductor ExpressionSet which has been prenormalized using 
exisiting methods such as MAS5.0 or GCRMA. For more information on these 
methods see the Bioconductor 'affy' package. The 'geneClassifiers' package 
contains an example dataset of MAS5.0 normalized (target value = 500) gene 
expression data of 25 multiple myeloma patients that were treated in the 
HOVON65/GMMG-HD4 trial.
<<>>=
library(Biobase)
data(exampleMAS5)
class(exampleMAS5) #an object of class ExpressionSet
dim(exampleMAS5) 
preproc(experimentData(exampleMAS5))
@

To import this data into the 'geneClassifiers' package, the setNormalization 
function is used:
<<>>=
fixedData <- setNormalizationMethod( exampleMAS5, method="MAS5.0", targetValue = 500 )
fixedData
@

In order to find reliable results in the downstream classification process, the 
function expects the unmanipulated output from the normalization methods. The 
function tries to  detect deviations such as when providing subsets of data 
sets or log transformed data, but detection is not guaranteed! When providing 
an ExpressionSet with all probe-set still included, the 'targetValue=500' 
argument - which has to be provided for the MAS5.0 normalization method - can 
be extracted from the data. Because here we have reduced the number of 
probe-sets in the example data due to space considerations, the MAS5.0 target 
value can not be obtained from the data so that the argument has to be 
provided. See '?setNormalizationMethod' for more details. 


\section{Performing classifications}
To perform the classification using a classifier described in section
\ref{sec:Classifiers} on the data described in section \ref{sec:data}, 
the 'runClassifier' function is called using both arguments:

<<>>=
resultsEMC92  <- runClassifier( "EMC92" , fixedData )
resultsUAMS70 <- runClassifier( "UAMS70", fixedData )

resultsEMC92
resultsUAMS70
@

The scores and classifications can be extracted using the 'getScores' and 
'getClassifications' function

<<>>=
data.frame(
    "score_EMC92"  = getScores( resultsEMC92 ),
    "class_EMC92"  = getClassifications( resultsEMC92 ),
    "score_UAMS70" = getScores( resultsUAMS70 ),
    "class_UAMS70" = getClassifications( resultsUAMS70 )
)
@

\section{Caution: non standard situations}

The geneClassifiers package performs a batch correction by applying a linear 
transformation of the probe-set means and standard deviations to the values 
observed in the classifiers' training set. In order to accurately do this, 
the assumption is that the data contains a sufficient amount of samples 
(n>=20) to estimate the means and standard deviations. If less samples are 
available, the 'runClassifier' function will give a warning and suggest to 
consider setting 'do.batchcorrection = FALSE'. Please note this will only 
result in valid results if the data under consideration is not expected to 
have significant batch related differences compared to the classifiers 
training set. I.e. similar sample work procedures, hybridization reagents, 
etc, are assumed!

Besides the requirements of a matching normalization method between data and 
classifier and sufficient samples, the assumption is that the probe-sets 
needed for classification are present in the data. If this is not true, 
simply ignoring the missing probe-set may heavily bias the results. Therefore, 
when detecting missing probe-sets, the 'run-classifier' function will throw an 
error and suggest to consider using the argument 'allow.reweighted = TRUE'. 
This will reweight the weightings for the probe-sets which are present, based 
on the covariance structure of the classifiers' trainings data. See the 
vignette 'MissingCovariates' for more information. 

<<fig=TRUE>>=
resultsEMC92.reWeighted <- runClassifier( 
    "EMC92" , 
    fixedData[1:70,] ,
    allow.reweighted=TRUE
)

resultsEMC92.reWeighted

plot(
    x = getScores(resultsEMC92),
    y = getScores(resultsEMC92.reWeighted), 
    xlab = "complete", 
    ylab = "reweighted", 
    main = "EMC92 scores",
    pch = 21,
    bg  ='black'
)
lines(c(-10,10),c(-10,10),col=2,lty=2)
abline(
    v = getDecisionBoundaries( getClassifier( resultsEMC92           )),
    h = getDecisionBoundaries( getClassifier( resultsEMC92.reWeighted)),
    col='red'
)
@

<<>>=
sessionInfo()
@
\end{document}
